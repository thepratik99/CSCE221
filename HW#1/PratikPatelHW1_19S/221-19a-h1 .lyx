#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size larger
CSCE 221 Cover Page
\end_layout

\begin_layout Standard
\align center

\size larger
Homework #1 
\end_layout

\begin_layout Standard
\align center

\size large
Due February 11 at midnight to eCampus
\size larger

\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
First Name: Pratik
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name: Patel
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN: 527004337
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
User Name: p.pratik99 
\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address: p.pratik99@tamu.edu
\size default

\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more: 
\begin_inset CommandInset href
LatexCommand href
name "Aggie Honor System Office"
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset

 
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Textbook
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Class Notes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Standard
\begin_inset VSpace 2cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pratik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Patel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02/11/2019
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Quote

\series bold
Type solutions to the homework problems listed below using preferably \SpecialChar LyX
/\SpecialChar LaTeX

 word processors, see the class webpage for more information about their
 installation and tutorials.
 
\end_layout

\begin_layout Enumerate
(10 points) Write the C++ classes called 
\family typewriter
ArithmeticProgression
\family default
 and 
\family typewriter
GeometricProgression
\family default
 that are derived from the abstract class 
\family typewriter
Progression
\family default
, with two pure virtual functions, 
\family typewriter
getNext()
\family default
 and 
\family typewriter
sum()
\family default
, see the course textbook p.
 87–90 for more details.
 Each subclass should implement these functions in order to generate elements
 of the sequences and their sums.
 Test your program for the different values of 
\begin_inset Formula $d$
\end_inset

, 
\begin_inset Formula $r$
\end_inset

 and the number of elements 
\begin_inset Formula $n$
\end_inset

 in each progression.
 
\begin_inset Newline newline
\end_inset

What is the classification of those functions: 
\family typewriter
getNext()
\family default
 and 
\family typewriter
sum()
\family default
 in terms of the Big-O notation?
\end_layout

\begin_deeper
\begin_layout Standard
Recall the definitions of the arithmetic and geometric progressions.
 
\end_layout

\begin_layout Standard

\series bold
\emph on
Definition
\series default
\emph default
: An 
\emph on
arithmetic progression
\emph default
 with the initial term 
\begin_inset Formula $a$
\end_inset

 and the common real difference 
\begin_inset Formula $d$
\end_inset

 is a sequence of the form
\end_layout

\begin_layout Standard
\begin_inset Formula $a,a+d,a+2d,\ldots,a+nd,\ldots$
\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
Definition
\series default
\emph default
: A 
\emph on
geometric progression
\emph default
 with the initial term 
\begin_inset Formula $a$
\end_inset

 and the common real ratio 
\begin_inset Formula $r$
\end_inset

 is a sequence of the form
\end_layout

\begin_layout Standard
\begin_inset Formula $a,ar,ar^{2},\dots,ar^{n},\dots$
\end_inset


\end_layout

\begin_layout Standard
Solution:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <iostream> 
\end_layout

\begin_layout Plain Layout

#include <math.h>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class Progression 
\end_layout

\begin_layout Plain Layout

{ 	
\end_layout

\begin_layout Plain Layout

	Progression(a, d) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		this.a = a; 		
\end_layout

\begin_layout Plain Layout

		this.d = d; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

public: 	
\end_layout

\begin_layout Plain Layout

	virtual int sum() = 0; 	
\end_layout

\begin_layout Plain Layout

	virtual int getNext(int current) = 0;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

private: 	
\end_layout

\begin_layout Plain Layout

	int a; 	
\end_layout

\begin_layout Plain Layout

	int d; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class ArithmeticProgession : public Progression 
\end_layout

\begin_layout Plain Layout

{ 	
\end_layout

\begin_layout Plain Layout

	ArithmeticProgession(a, d) : Progression(a, d){ ;}
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	int sum(n) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		int totalA = n*a; 		
\end_layout

\begin_layout Plain Layout

		int totalDifference = ((n * (n + 1)) / 2) * d;
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		return totalA + totalDifference; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	int getNext(int current) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		return current + d; 	
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class GeometricProgession : public Progression 
\end_layout

\begin_layout Plain Layout

{ 	
\end_layout

\begin_layout Plain Layout

	GeometricProgession(a, d) : Progression(a, d){ ;}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	int sum(n) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		return ((a * (1 - pow(d, n))) / (1 - d)); 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	int getNext(int current) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		return current * d; 	
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset

Both the functions' for both class have Big-O notation of 
\begin_inset Formula $O(1)$
\end_inset

.
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Use the STL class 
\family typewriter
vector<double>
\family default
 to write a C++ function that takes two vectors, 
\family typewriter
a
\family default
 and 
\family typewriter
b
\family default
, of the same size and returns a vector 
\family typewriter
c
\family default
 such that 
\begin_inset Formula $c[i]=a[i]\cdot b[i]$
\end_inset

.
 How many scalar multiplications are used to create elements of the vector
 
\family typewriter
c
\family default
 of size 
\begin_inset Formula $n$
\end_inset

? What is the classification of this algorithm in terms of the Big-O notation?
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

#include <vector>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

vector<int> multiplyVectors(vector<int> a, vector<int> b) 
\end_layout

\begin_layout Plain Layout

{ 	
\end_layout

\begin_layout Plain Layout

	vector<int> c;
\end_layout

\begin_layout Plain Layout

	if(a.size() == b.size()) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		for(int i = 0, i < a.size(); ++i) 			
\end_layout

\begin_layout Plain Layout

			c.push_back(a.at(i) * b.at(i)); 	
\end_layout

\begin_layout Plain Layout

	} 	
\end_layout

\begin_layout Plain Layout

	else 		
\end_layout

\begin_layout Plain Layout

		cout << "The vectors passed in this function are not of same size." <<
 endl;
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	return c; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

There are 
\begin_inset Formula $n$
\end_inset

 numbers of scalar multiplications.
 The Big-O notation of this alogorithm is 
\begin_inset Formula $O(n)$
\end_inset

.
 
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Enumerate
(10 points) Use the STL class 
\family typewriter
vector<int>
\family default
 to write a C++ function that returns true if there are two elements of
 the vector for which their product is odd, and returns false otherwise.
 Provide a formula on the number of scalar multiplications in terms of 
\begin_inset Formula $n$
\end_inset

, the length of the vector, to solve the problem in the best and the worst
 cases.
 Describe the situations of getting the best and worst cases.
 What is the classification of the algorithm in the best and worst cases
 in terms of the Big-O notation?
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

#include <iostream> 
\end_layout

\begin_layout Plain Layout

#include <vector>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

bool oddVector(vector<int> a) 
\end_layout

\begin_layout Plain Layout

{ 	
\end_layout

\begin_layout Plain Layout

	for(int i = 0; i < a.size(); ++i) 	
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

		if(a.at(i) % 2 == 0) 			
\end_layout

\begin_layout Plain Layout

			return false; 	
\end_layout

\begin_layout Plain Layout

	} 	
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	return true; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

We can get the result we want, without any multiplications.
 Because, if we multiply an even number with any number, the result will
 be even.
 Therfore, if our vector does not contain any even number than the result
 will be true, else it will be false.
 The best case for this algorithm is that the first element in the vector
 is an even number.
 The worst case is that the last element is an even number or all the elements
 are odd.
 The Big-O notation in the best case is 
\begin_inset Formula $O(1)$
\end_inset

 and in the worst case is 
\begin_inset Formula $O(n)$
\end_inset

.
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Enumerate
(20 points) Write a templated C++ function called 
\family typewriter
BinarySearch
\family default
 which searches for a target 
\family typewriter
x
\family default
 of any numeric type 
\family typewriter
T
\family default
, and test it using a sorted vector of type 
\family typewriter
T
\family default
.
 Provide the formulae on the number of comparisons in terms of 
\begin_inset Formula $n$
\end_inset

, the length of the vector, when searching for a target in the best and
 the worst cases.
 Describe the situations of getting the best and worst cases.
 What is the classification of the algorithm in the best and worst cases
 in terms of the Big-O notation?
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

#include <iostream> 
\end_layout

\begin_layout Plain Layout

#include <vector>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<template typename T>
\end_layout

\begin_layout Plain Layout

int BinarySearch(T x, vector<T> a) 
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	int middle;
\end_layout

\begin_layout Plain Layout

	int lower = 0;
\end_layout

\begin_layout Plain Layout

	int higher = (int) a.size() - 1;
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	while(lower <= higher)
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		middle = (lower + higher) / 2;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		if(a.at(middle) < x)
\end_layout

\begin_layout Plain Layout

			lower = middle + 1;
\end_layout

\begin_layout Plain Layout

		else if (a.at(middle) > x)
\end_layout

\begin_layout Plain Layout

			higher = middle - 1;
\end_layout

\begin_layout Plain Layout

		else
\end_layout

\begin_layout Plain Layout

			return middle;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	return -1;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Best case for this algorithm is that the target is in the middle of the
 array.
 In the best case there will be only 
\begin_inset Formula $3$
\end_inset

 comparisions.
 In the worst case scenario it will have 
\begin_inset Formula $3nlog(n)$
\end_inset

 comparisons.
 In the best case, the Big-O notation is 
\begin_inset Formula $O(1)$
\end_inset

.
 In the worst case, it is 
\begin_inset Formula $O(nlog(n))$
\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) 
\series bold
(R-4.7 p.
 185)
\series default
 The number of operations executed by algorithms 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 is 
\begin_inset Formula $8n\log n$
\end_inset

 and 
\begin_inset Formula $2n^{2}$
\end_inset

, respectively.
 Determine 
\begin_inset Formula $n_{0}$
\end_inset

 such that 
\begin_inset Formula $A$
\end_inset

 is better than 
\begin_inset Formula $B$
\end_inset

 for 
\begin_inset Formula $n\geq n_{0}$
\end_inset

.
 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Formula $n_{0}=1$
\end_inset

 .
 Because for every 
\begin_inset Formula $n\geq1,8nlog(n)<2n^{2}$
\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Enumerate
(10 points) 
\series bold
(R-4.21 p.
 186)
\series default
 Bill has an algorithm, 
\family typewriter
find2D
\family default
, to find an element 
\begin_inset Formula $x$
\end_inset

 in an 
\begin_inset Formula $n\times n$
\end_inset

 array 
\begin_inset Formula $A$
\end_inset

.
 The algorithm 
\family typewriter
find2D
\family default
 iterates over the rows of A, and calls the algorithm 
\family typewriter
arrayFind
\family default
, see Code Fragment 4.5, p.
 184, on each row, until 
\begin_inset Formula $x$
\end_inset

 is found or it has searched all rows of A.
 What is the worst-case running time of 
\family typewriter
find2D
\family default
 in terms of 
\begin_inset Formula $n$
\end_inset

? What is the worst-case running time of 
\family typewriter
find2D
\family default
 in terms of 
\begin_inset Formula $N$
\end_inset

, where 
\begin_inset Formula $N$
\end_inset

 is the total size of A? Would it be correct to say that 
\family typewriter
find2D
\family default
 is a linear-time algorithm? Why or why not?
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

The worst case running time of the algorithm, in terms of 
\begin_inset Formula $n$
\end_inset

, is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 If 
\begin_inset Formula $N=n^{2}$
\end_inset

, then the Big-O notation is 
\begin_inset Formula $O(N)$
\end_inset

.
 Here, Big-O is linear because 
\begin_inset Formula $N$
\end_inset

 is only of power 1.
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Enumerate
(10 points) 
\series bold
(R-4.39 p.
 188)
\series default
 Al and Bob are arguing about their algorithms.
 Al claims his 
\begin_inset Formula $O(n\log n)$
\end_inset

-time method is 
\series bold
always
\series default
 faster than Bob's 
\begin_inset Formula $O(n^{2})$
\end_inset

-time method.
 To settle the issue, they perform a set of experiments.
 To Al's dismay, they find that if 
\begin_inset Formula $n<100$
\end_inset

, the 
\begin_inset Formula $O(n^{2})$
\end_inset

-time algorithm runs faster, and only when 
\begin_inset Formula $n\geq100$
\end_inset

 is the 
\begin_inset Formula $O(n\log n)$
\end_inset

-time algorithm better.
 Explain how this is possible.
 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution: 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

If Al's algorithm does 
\begin_inset Formula $10nlog(n)$
\end_inset

 comparisions and Bob's algorithm does 
\begin_inset Formula $n^{2}$
\end_inset

 comparisions, then 
\begin_inset Formula $10nlog(n)>n^{2}$
\end_inset

 for 
\begin_inset Formula $n<100$
\end_inset

.
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Enumerate
(20 points) Find the running time functions for the algorithms below and
 write their classification using Big-O asymptotic notation.
 The running time function should provide a formula on the number of operations
 performed on the variabl
\family typewriter
e
\family default
 
\begin_inset Formula $s$
\end_inset

.
 Note that array indices start from 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex1(A):
\end_layout

\begin_layout LyX-Code

\series bold
  Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
  Output
\series default
: The sum of the elements in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow1$
\end_inset

 to 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $s$
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Number of Operation = 
\begin_inset Formula $2(n-1)+1$
\end_inset


\end_layout

\begin_layout LyX-Code
Big-O Notation = 
\begin_inset Formula $O(n)$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex2(A):
\end_layout

\begin_layout LyX-Code

\series bold
  Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
  Output
\series default
: The sum of the elements at even positions in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow2$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
by 
\series default
increments of 2
\series bold
 do
\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $s$
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Number of Operation = 
\begin_inset Formula $2(\frac{(n-1-2+1)}{2})+1$
\end_inset


\end_layout

\begin_layout LyX-Code
Number of Operation = 
\begin_inset Formula $n-1$
\end_inset


\end_layout

\begin_layout LyX-Code
Big-O Notation = 
\begin_inset Formula $O(n)$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex3(A):
\end_layout

\begin_layout LyX-Code
   
\series bold
Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
   Output
\series default
: The sum of the partial sums in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow0$
\end_inset

  
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
   for
\series default
 
\begin_inset Formula $j\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $i$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
     
\begin_inset Formula $s\leftarrow s+A[j]$
\end_inset


\end_layout

\begin_layout LyX-Code
   
\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $s$
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Number of Operations = 
\begin_inset Formula $2n+2(\frac{n(n-1)}{2})+1$
\end_inset


\end_layout

\begin_layout LyX-Code
Number of Operations = 
\begin_inset Formula $n^{2}+n+1$
\end_inset


\end_layout

\begin_layout LyX-Code
Big-O Notation = 
\begin_inset Formula $O(n^{2})$
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex4(A):
\end_layout

\begin_layout LyX-Code
   
\series bold
Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
   Output
\series default
: The sum of the partial sums in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $t\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\series default
 
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $t\leftarrow t+s$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $t$
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Solution:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Number of Operations: 
\begin_inset Formula $2(n-1)+1$
\end_inset


\end_layout

\begin_layout LyX-Code
Big-O Notation = 
\begin_inset Formula $O(n)$
\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\end_deeper
\end_body
\end_document
